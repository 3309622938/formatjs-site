{{sectionHeading "component.intlNumber" "component.intlNumber(number [, options])"}}

<p>Format numbers according to the locale.</p>

<h3>Parameters</h3>
<dl class="parameters-list">
    <dt>{{code "number: number"}}</dt>
    <dd>
        <p>Number to format.</p>
    </dd>
    <dt>{{code "options: Object"}}</dt>
    <dd>
        <p>Optional. These are the configuration options for {{code "Intl.NumberFormat"}}:</p>
        <dl>
            <dt>{{code "localeMatcher"}}</dt>
            <dd>The locale matching algorithm to use. Possible values are "lookup" and "best fit"; the default is "best fit".</dd>
            <dt>{{code "style"}}</dt>
            <dd>The formatting style to use. Possible values are "decimal" for plain number formatting, "currency" for currency formatting, and "percent" for percent formatting; the default is "decimal".</dd>
            <dt>{{code "currency"}}</dt>
            <dd>The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as "USD" for the US dollar or "EUR" for the euro.</dd>
            <dt>{{code "currencyDisplay"}}</dt>
            <dd>How to display the currency in currency formatting. Possible values are "symbol" to use a localized currency symbol such as â‚¬, "code" to use the ISO currency code, "name" to use a localized currency name such as "dollar"; the default is "symbol".</dd>
            <dt>{{code "useGrouping"}}</dt>
            <dd>Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators. Possible values are true and false; the default is true.</dd>
        </dl>
    </dd>
</dl>

<h3>Example</h3>

{{#code "jsx"}}
/** @jsx React.DOM */
var MyComponent = React.createClass({
    mixins: [ReactIntlMixin],
    render: function () {
        return <p>this.intlNumber(4000)</p>
    }
});
{{/code}}

<p>When the locale is set to {{code "en-US"}} the number will be rendered as {{code "4.000"}}.</p>

{{#code "jsx"}}
/** @jsx React.DOM */
// renders <p>4,000</p>
React.renderComponent(
    <MyComponent locales={["en-US"]}/>,
    document.getElementById('example')
);
{{/code}}

<p>However, when the locale is set to {{code "fr-FR"}} the number will be printed as {{code "4.000"}}.</p>

{{#code "jsx"}}
/** @jsx React.DOM */
// renders <p>4.000</p>
React.renderComponent(
    <MyComponent locales={["fr-FR"]}/>,
    document.getElementById('example')
);
{{/code}}
