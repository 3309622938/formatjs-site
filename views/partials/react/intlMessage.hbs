{{sectionHeading "component.intlMessage" "component.intlMessage(message, data)"}}

<p>Format messages according to the locale.</p>

<h3>Parameters</h3>
<dl class="parameters-list">
    <dt>{{code "message: string"}}</dt>
    <dd>
        <p>Message using <a href="/javascript/#messageformat-strings">Simple String Format</a>.</p>
    </dd>
    <dt>{{code "data: Object"}}</dt>
    <dd>
        <p>Data used by each token in the form of key-value pairs where the key matches the token name.</p>
    </dd>
</dl>

<h3>Example</h3>

<p>The simplest form of formatting is actually just token replacement, e.g.:</p>

{{#code "jsx"}}
/** @jsx React.DOM */
var MyComponent = React.createClass({
    mixins: [ReactIntlMixin],
    render: function () {
        return <p>A: {this.intlMessage('{employee} reports to {manager}.')}</p>;
    }
});

React.renderComponent(
    <MyComponent locales={["de-DE"]} employee="John" manager="Mike" />,
    document.getElementById('example')
);
{{/code}}
